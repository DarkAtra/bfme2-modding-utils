name: Build & Release
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**/src/**'
      - '**/pom.xml'
      - 'pom.xml'

concurrency:
  group: ci-main

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      # used by semantic release
      contents: write
      # used to publish the jar to github packages
      packages: write
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Tests
        run: mvn -B -ntp clean install

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6.3.0
        with:
          gpg_private_key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          passphrase: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

      - id: semantic-release
        name: Create new Release
        uses: cycjimmy/semantic-release-action@v4.2.1
        with:
          extra_plugins: |
            @semantic-release/git
            @semantic-release/exec
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OSSRH_GPG_SECRET_KEY_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

  publish-maven-central:
    name: Publish to Maven Central
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.new-release-published == 'true'
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Set up JDK 17
        uses: actions/setup-java@v4.7.1
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v6.3.0
        with:
          gpg_private_key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          passphrase: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

      - name: Publish Package
        run: |
          mvn -B -ntp versions:set -DgenerateBackupPoms=false -DnewVersion=${{ needs.build.outputs.new-release-version }}
          mvn -B -ntp -Psign-with-gpg -Ppublish-central-portal clean deploy -DskipTests -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_PORTAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_PORTAL_SECRET }}
